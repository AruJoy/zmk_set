/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R  &kp T          &kp Y      &kp U          &kp I      &kp O    &kp P              &kp BSPC
&mo 3      &kp A  &kp S  &kp D      &kp F  &kp G          &kp H      &kp J          &kp K      &kp L    &kp DOUBLE_QUOTES  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V  &kp B          &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH           &kp RSHIFT
                         &kp LCTRL  &mo 2  &lt 1 SPACE    &kp SPACE  &kp RIGHT_ALT  &kp RCTRL
            >;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp ESC  &trans  &trans    &trans        &trans          &kp PAGE_UP    &kp HOME        &kp UP_ARROW  &kp END          &trans  &kp DELETE
&kp LCTRL  &trans   &trans  &trans    &trans        &trans          &kp PAGE_DOWN  &kp LEFT_ARROW  &kp UP        &kp RIGHT_ARROW  &trans  &kp ENTER
&kp LSHFT  &trans   &trans  &trans    &bt BT_CLR    &bt BT_SEL 0    &trans         &trans          &trans        &trans           &trans  &kp RIGHT_SHIFT
                            &kp LGUI  &kp LEFT_ALT  &kp SPACE       &trans         &trans          &trans
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp EXCL  &kp AT  &kp HASH  &kp DLLR        &kp PRCNT       &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &kp BSPC
&trans      &trans    &trans  &trans    &trans          &trans          &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHIFT  &trans    &trans  &trans    &bt BT_CLR_ALL  &bt BT_SEL 0    &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                              &kp LGUI  &trans          &kp SPACE       &kp SPACE  &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
